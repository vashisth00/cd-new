{"ast":null,"code":"import _toConsumableArray from \"D:\\\\red-internship\\\\react-pusher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\red-internship\\\\react-pusher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\red-internship\\\\react-pusher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\red-internship\\\\react-pusher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\red-internship\\\\react-pusher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\red-internship\\\\react-pusher\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\red-internship\\\\react-pusher\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport ChatList from './ChatList';\nimport ChatBox from './ChatBox';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      text: '',\n      username: '',\n      chats: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var username = window.prompt('Username: ', 'Anonymous');\n      this.setState({\n        username: username\n      });\n      var pusher = new Pusher('YOUR_PUSHER_APP_KEY', {\n        cluster: 'YOUR_CLUSTER',\n        encrypted: true\n      });\n      var channel = pusher.subscribe('chat');\n      channel.bind('message', function (data) {\n        _this2.setState({\n          chats: [].concat(_toConsumableArray(_this2.state.chats), [data]),\n          test: ''\n        });\n      });\n      this.handleTextChange = this.handleTextChange.bind(this);\n    }\n  }, {\n    key: \"handleTextChange\",\n    value: function handleTextChange(e) {\n      if (e.keyCode === 13) {\n        var payload = {\n          username: this.state.username,\n          message: this.state.text\n        };\n        axios.post('http://localhost:5000/message', payload);\n      } else {\n        this.setState({\n          text: e.target.value\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Welcome to React-Pusher Chat\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(ChatList, {\n        chats: this.state.chats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(ChatBox, {\n        text: this.state.text,\n        username: this.state.username,\n        handleTextChange: this.handleTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\red-internship\\react-pusher\\src\\App.js"],"names":["React","Component","axios","Pusher","ChatList","ChatBox","App","props","state","text","username","chats","window","prompt","setState","pusher","cluster","encrypted","channel","subscribe","bind","data","test","handleTextChange","e","keyCode","payload","message","post","target","value","logo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,OAAO,WAAP;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClB,UAAMD,QAAQ,GAAGE,MAAM,CAACC,MAAP,CAAc,YAAd,EAA4B,WAA5B,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACA,UAAMK,MAAM,GAAG,IAAIZ,MAAJ,CAAW,qBAAX,EAAkC;AAC/Ca,QAAAA,OAAO,EAAE,cADsC;AAE/CC,QAAAA,SAAS,EAAE;AAFoC,OAAlC,CAAf;AAIA,UAAMC,OAAO,GAAGH,MAAM,CAACI,SAAP,CAAiB,MAAjB,CAAhB;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAa,SAAb,EAAwB,UAAAC,IAAI,EAAI;AAC9B,QAAA,MAAI,CAACP,QAAL,CAAc;AAAEH,UAAAA,KAAK,+BAAM,MAAI,CAACH,KAAL,CAAWG,KAAjB,IAAwBU,IAAxB,EAAP;AAAsCC,UAAAA,IAAI,EAAE;AAA5C,SAAd;AACD,OAFD;AAGA,WAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;;qCAEgBI,C,EAAG;AAClB,UAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpB,YAAMC,OAAO,GAAG;AACdhB,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QADP;AAEdiB,UAAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWC;AAFN,SAAhB;AAIAP,QAAAA,KAAK,CAAC0B,IAAN,CAAW,+BAAX,EAA4CF,OAA5C;AACD,OAND,MAMO;AACL,aAAKZ,QAAL,CAAc;AAAEL,UAAAA,IAAI,EAAEe,CAAC,CAACK,MAAF,CAASC;AAAjB,SAAd;AACD;AACF;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWG,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AACE,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IADnB;AAEE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAFvB;AAGE,QAAA,gBAAgB,EAAE,KAAKa,gBAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,CADF;AAgBD;;;;EArDetB,S;;AAwDlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport ChatList from './ChatList';\r\nimport ChatBox from './ChatBox';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      username: '',\r\n      chats: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = window.prompt('Username: ', 'Anonymous');\r\n    this.setState({ username });\r\n    const pusher = new Pusher('YOUR_PUSHER_APP_KEY', {\r\n      cluster: 'YOUR_CLUSTER',\r\n      encrypted: true\r\n    });\r\n    const channel = pusher.subscribe('chat');\r\n    channel.bind('message', data => {\r\n      this.setState({ chats: [...this.state.chats, data], test: '' });\r\n    });\r\n    this.handleTextChange = this.handleTextChange.bind(this);\r\n  }\r\n\r\n  handleTextChange(e) {\r\n    if (e.keyCode === 13) {\r\n      const payload = {\r\n        username: this.state.username,\r\n        message: this.state.text\r\n      };\r\n      axios.post('http://localhost:5000/message', payload);\r\n    } else {\r\n      this.setState({ text: e.target.value });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h1 className=\"App-title\">Welcome to React-Pusher Chat</h1>\r\n        </header>\r\n        <section>\r\n          <ChatList chats={this.state.chats} />\r\n          <ChatBox\r\n            text={this.state.text}\r\n            username={this.state.username}\r\n            handleTextChange={this.handleTextChange}\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}